name: Build and Push to DockerHub

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      note:
        description: 'Notes'
        required: false
        default: 'Manual trigger'

env:
  REGISTRY: docker.io
  ACCOUNT: pcloud

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # to upload sarif files
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # https://github.com/actions/cache/blob/master/examples.md#java---maven
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Testing
        run: ./mvnw test

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACCOUNT }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Get image tag
        run: |
          TAG=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.1:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ "$TAG" == *SNAPSHOT ]]; then TAG=$(echo $GITHUB_SHA | cut -c 1-6); fi
          echo $TAG
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: | 
            ./mvnw clean compile jib:build \
            -Djib.to.image=${{ env.REGISTRY }}/${{ env.ACCOUNT }}/simple-springboot-app:${{ env.TAG }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/simple-springboot-app:${{ env.TAG }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'